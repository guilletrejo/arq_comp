Casos MIPS probados

1: FUNCIONA
	sw 3, 0(0)
	and 4, 2, 0
	or 3, 2, 6
	lw 2, 0(0)
	addu 0, 4, 2
	slt 5, 6, 7
	END

2: FUNCIONA
	sw 3, 1(0)
	addu 7, 2, 2
	beq 7, 0, 3
	subu 2, 1, 3
	lw 0, 1(0)
	addi 0, 0, 4
	and 5, 2, 5
	or 4, 6, 2

3: NO FUNCIONA! (subu no sustrae) *ACLARACION* El branch no se comporta como deberia, el "offset" termina siendo la instruccion a ejecutar.
	sw 3, 1(1)
	addu 0, 0, 1
	beq 1, 0, 3
	subu 2, 1, 3
	lw 0, 1(1)
	addi 0, 0, 4
	and 5, 2, 5
	or 4, 6, 2
	END

4: FUNCIONA perrrfecto en placa. incluso cambiando el and por and 5, 0, 4 tb anda joya.
	sw 3, 1(1)
	lw 0, 1(1)
	addi 0, 0, 4
	and 5, 2, 5
	or 4, 6, 2
	END

5: Funciona perrrfecto en placa.
	addi 0, 0, 1
	bne 0, 1, 4
	subu 2, 5, 1
	and 5, 5, 2
	sw 5, 0(1)
	or 7, 7, 10
	lw 6, 0(1)
	END

6: No funciona muy bien el branch.
	addi 0, 0, 1
	beq 0, 1, 4
	subu 2, 5, 1
	and 5, 5, 2
	sw 5, 0(1)
	or 7, 7, 10
	lw 6, 0(1)
	addi 3, 4, 2
	END

7: Caso NO BRANCHEA -> No funciona la dependencia entre and 5, 9, 0 y el sw 5, 0(1)
						El store esta guardando el valor viejo de r5, que es un 5
						En el ultimo store, si guarda bien el valor pero porque ya se actualizo
						antes. Ver dependencia de datos.
	addi 0, 0, 1
	addi 2, 2, 1
	addi 3, 3, 1
	addi 4, 4, 1
	bne 0, 1, 7
	subu 2, 5, 1
	and 5, 9, 0
	sw 5, 0(1)
	or 7, 7, 10
	lw 6, 0(1)
	addi 3, 4, 2
	addi 1, 3, 3
	sw 5, 1(0)
	END

8: Pareciera que branchea al sw 5, 0(1) (hace jump) pero igual el store no anda bien. -->> ARREGLADO LO DEL BRANCH JUMPEADO, pero aun esta el problema de la dependencia.
	addi 0, 0, 1
	addi 2, 2, 1
	addi 3, 3, 1
	addi 4, 4, 1
	beq 0, 1, 7
	subu 2, 5, 1
	and 5, 9, 0
	sw 5, 0(1)
	or 7, 7, 10
	lw 6, 0(1)
	addi 3, 4, 2
	addi 1, 3, 3
	sw 5, 1(0)
	END


VERSION FINAL PRUEBAS:

1: FUNCIONA, prueba que funciona dependencia de datos y funciona burbuja load, tb funciona dependencia load
addi 0, 0, 1
addi 2, 2, 1
addi 3, 3, 1
addi 4, 4, 3
and 5, 9, 0
addi 6, 5, 2
sw 6, 0(1)
lw 7, 0(1)
addu 7, 2, 1
END

2: FUNCIONA excepto dependencia sw
addi 0, 0, 1
addi 2, 2, 1
addi 3, 3, 1
addi 4, 4, 1
bne 0, 1, 7
subu 2, 5, 1
and 5, 9, 0
sw 5, 0(1)
or 7, 7, 10
lw 6, 0(1)
addi 3, 4, 2
addi 1, 3, 3
sw 5, 1(0)
END

3: idem anterior pero con beq, FUNCIONA (no hay dependencia sw)

4: riesgo de control (branch), FUNCIONA
addi 1, 1, 1
addi 2, 2, 2
addi 3, 3, 3
beq 2, 3, 1
addi 4, 4, 4
subu 5, 1, 3
beq 1, 2, 2
addi 6, 6, 1
addi 7, 7, 1
END


